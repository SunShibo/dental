<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jrtc.dao.BraceDAO">

    <resultMap type="com.jrtc.base.entity.bo.BraceBO" id="BraceMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="stage" column="stage" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="make" column="make" jdbcType="VARCHAR"/>
        <collection property="braces" ofType="com.jrtc.base.entity.bo.BraceMsgBO" >
            <result property="id" column="mid" />
            <result property="bId" column="b_id" />
            <result property="startTime" column="start_time"/>
            <result property="endTime" column="end_time" />
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="num" column="num" />
            <result property="status" column="mstatus" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BraceMap">
        select
          id, user_id, stage, status ,make
        from brace.brace
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BraceMap">
        select
          id, user_id, stage, status ,make
        from brace.brace
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BraceMap">
       select
          b.id, user_id, b.stage, b.status ,make, m.id mid ,m.b_id,m.start_time,m.end_time,m.`name`,m.num,m.`status` mstatus
        from brace b LEFT JOIN brace_msg m  on b.id=m.b_id
        where b.status='yes'  and m.status='yes'  and b.user_id=#{userId}  order by start_time asc
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into brace.brace(user_id, stage, status,make)
        values (#{userId}, #{stage}, #{status},#{make})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update brace.brace
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="stage != null and stage != ''">
                stage = #{stage},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="make != null and make != ''">
                make = #{make},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from brace.brace where id = #{id}
    </delete>

</mapper>